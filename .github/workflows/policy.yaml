name: Policy evaluation 

on:
  push:
    tags: ["*"]
    branches:
      - main
  pull_request:
    branches: ["**"]

env:
  REGISTRY: docker.io
  REGISTRY_USER: felipecruz1638514

jobs:
  build-analyze-push:
    name: Evaluate policies
    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Pull alpine
        run: |
          docker pull alpine@sha256:7298bd41b8aee1adde2a0a2819f695b5057bfd0234bf250f0e5d9946c7ab38bd
          
      - name: Quickview alpine  
        uses: felipecruz91/scout-action@main
        with:
          command: quickview
          image: "alpine@sha256:7298bd41b8aee1adde2a0a2819f695b5057bfd0234bf250f0e5d9946c7ab38bd"
          organization: "dockerscoutpolicy"
          debug: true

      - name: Evaluate local image digest  
        uses: felipecruz91/scout-action@main
        with:
          command: policy
          image: "alpine@sha256:7298bd41b8aee1adde2a0a2819f695b5057bfd0234bf250f0e5d9946c7ab38bd"
          organization: "dockerscoutpolicy"
          debug: true
          
      - name: Pull storm
        run: |
          docker pull storm:latest

      - name: Evaluate local image
        uses: felipecruz91/scout-action@main
        with:
          command: policy
          image: "storm:latest"
          organization: "dockerscoutpolicy"
          debug: true    
          
      - name: Fetch policy results from image (exists in registry)
        uses: felipecruz91/scout-action@main
        with:
          command: policy
          image: "dockerscoutpolicy/customers-api-service:0.0.8"
          organization: "dockerscoutpolicy"
          debug: true

      - name: Fetch policy results from image w/ platform (exists in registry)
        uses: felipecruz91/scout-action@main
        with:
          command: policy
          image: "dockerscoutpolicy/customers-api-service:0.0.8"
          organization: "dockerscoutpolicy"
          platform: "linux/amd64"
          debug: true
          
      - name: Fetch policy results from image in env 'latest-indexed' (does NOT exist in registry)
        uses: felipecruz91/scout-action@main
        with:
          command: policy
          image: "dockerscoutpolicy/customers-api-service"
          organization: "dockerscoutpolicy"
          environment: "latest-indexed"
          debug: true
          
      - name: Fetch policy results from image with jfrog domain in env 'staging' (does NOT exist in registry)
        uses: felipecruz91/scout-action@main
        with:
          command: policy
          image: "jfrog.io/foobar/kipz-test"
          organization: "dockerscoutpolicy"
          environment: "staging"
          debug: true
          
      - name: Fetch policy results from image w/ exit code true
        uses: felipecruz91/scout-action@main
        with:
          command: policy
          image: "dockerscoutpolicy/customers-api-service:0.0.8"
          organization: "dockerscoutpolicy"
          exit-code: true # Fail the build if the policies are not met
          debug: true
          

